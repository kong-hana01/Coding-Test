# https://www.acmicpc.net/problem/11057
# 접근 방법
# 0. 이중 리스트를 만들어, 엘리먼트인 리스트의 인덱스를 해당 자릿수에서 가능한 숫자로 정의한다. ex) [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], ...]
# 1. 리스트를 하나씩 탐색해가며 이전 자릿수에서 가능한 숫자의 경우의 수를 고려해 현재 자릿수에서 가능한 숫자의 경우의 수를 파악한다. ex) 이전 자릿수에서 0이 2개, 1이 3개면 현재 자릿수에서 0은 2개 가능, 1은 5개 가능, ....
# 2. 모든 리스트를 갱신한 뒤, n번째 리스트의 값을 모두 더하고, 이를 10007로 나눈 나머지를 출력한다.
n = int(input())
arr = [[0 for _ in range(10)] for _ in range(n+1)]
arr[1] = [1 for _ in range(10)]
for i in range(2, n+1):
    for j in range(10):
        for k in range(j, 10):
            arr[i][k] += arr[i-1][j]
print(sum(arr[n]) % 10007)